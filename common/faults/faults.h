#ifndef _FAULTS_H_
#define _FAULTS_H_

#endif


//Begin auto (todo) ENUM Defs
typedef enum {
    WARNING,
    ERROR,
    FATAL
} fault_priority_t;

typedef enum {
    MAIN_MODULE,
    DRIVELINE_FRONT,
    DRIVELINE_REAR,
    DASHBOARD,
    PRECHARGE,
    TV
} fault_owner_t;



//End auto (todo) ENUM Defs

//Begin auto struct defs
typedef struct {
    //Celing function of log_2 for size (for future reference)
    fault_priority_t priority : 2;
    fault_owner_t owner : 3;
    int f_max : 32;
    int f_min : 32;
    bool latched : 1;
} fault_message_t;
//End auto struct defs

//Begin auto fault array defs


//End auto fault array defs

extern fault_message_t fault_message;

//Hashtable for the LCD Text? Technically this is not very critical info and can just be an autogenerated struct that the display can understand.
//This sounds like a terrible idea bc of collisions creating linked lists


//Function defs
extern bool linkCarStateSDC();
extern void initFaultLibrary();
extern bool setFault(fault_priority_t priority, fault_owner_t owner, char* name);
extern void killFaultLibrary();